spring:  
  data:
    elasticsearch:
      cluster-name: elasticsearch
      cluster-nodes: 192.168.31.205:9300,192.168.0.112:9300,192.168.43.132:9300
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/leyou?characterEncoding=utf-8&autoReconnect=true&useSSL=false&serverTimezone=GMT%2B8&zeroDateTimeBehavior=convertToNull
    username: root
    password: 123456
    hikari:
      max-lifetime: 28830000 # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      maximum-pool-size: 9 # 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
  redis:
    host: 192.168.31.205
  security:
    user:
      name: user1
      password: password1


hystrix:
  share-security-context: true
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000 #默认1s超时，如果不配置超时时间，第一次请求网关会失败(超时)
          strategy: SEMAPHORE
          semaphore:
            # Practically max int, but Hystrix needs an actual value. The default would be 10.
            # We do rate-limiting separately using a custom org.springframework.cloud.gateway.filter.ratelimit.AbstractRateLimiter based on resilience4j
            maxConcurrentRequests: 100000
ribbon:
  ReadTimeout: 20000
  ConnectTimeout: 20000
